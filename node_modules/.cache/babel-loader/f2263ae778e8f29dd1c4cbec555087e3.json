{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hengo\\\\Documents\\\\GitHub\\\\react-weather\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { GeocoderAutocomplete } from \"@geoapify/geocoder-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Search(props) {\n  _s();\n\n  const [location, setLocation] = useState(\"\");\n  const [coord, setCoord] = useState([]);\n  const {\n    info,\n    onCityChange,\n    forecast,\n    setForecast\n  } = props;\n  const [submitted, setSubmitted] = useState(false);\n  const [suggestions, setSuggestions] = useState({});\n  const [focus, setFocus] = useState(false); //fetch current weather data using coordinates from geomap\n\n  useEffect(() => {\n    if (submitted) {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${coord[0]}&lon=${coord[1]}&appid=4920da1d765991ca446bd506bd9286d3&units=imperial`).then(response => response.json()).then(data => onCityChange({\n        name: data.name,\n        temp: data.main.temp,\n        weather: data.weather[0].main,\n        description: data.weather[0].description,\n        country: data.sys.country,\n        icon: `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`,\n        state: coord[2]\n      })).catch(error => console.log(error));\n    }\n  }, [coord]); // fetch future forecast from API\n\n  useEffect(() => {\n    fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${coord[0]}&lon=${coord[1]}&cnt=5&appid=4920da1d765991ca446bd506bd9286d3&units=imperial`).then(response => response.json()).then(data => setForecast(data.list)).catch(error => console.log(error));\n  }, [coord]); // autocomplete on input\n\n  useEffect(() => {\n    if (location) {\n      fetch(`https://api.geoapify.com/v1/geocode/autocomplete?text=${location}&apiKey=82f3fe01d1294f6d9460337e0115e5d2`).then(response => response.json()).then(data => setSuggestions(data.features)).catch(error => console.log(error));\n    }\n  }, [location]);\n\n  function handleInputChange(e) {\n    setLocation(e.target.value);\n  } //sets coordinates to option clicked from drop-down\n\n\n  function handleSelectClick(e) {\n    let searchCoord = e.target.getAttribute(\"data-value\").split(\",\");\n    console.log(searchCoord);\n    setCoord([searchCoord[0], searchCoord[1], searchCoord[2]]);\n    setSubmitted(true);\n    setFocus(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      className: \"mb-16 flex w-screen justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pr-2\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            forHTML: \"location\",\n            className: `flex h-full justify-center 2-`,\n            children: [\"Search location:\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              outlineColor: \"#C6E0FB\"\n            },\n            className: \" pl-[4px] rounded-lg w-1/3\",\n            placeholder: \"Enter city name\",\n            id: \"location\",\n            name: \"location\",\n            type: \"text\",\n            autoComplete: \"off\",\n            onChange: handleInputChange,\n            onFocus: () => setFocus(true),\n            value: location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: suggestions.length > 0 && focus ? suggestions.map(suggestion => location == \"\" ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hover:bg-sky-200 cursor-pointer\",\n              onClick: handleSelectClick,\n              \"data-value\": [suggestion.properties.lat, suggestion.properties.lon, suggestion.properties.state],\n              children: [suggestion.properties.city, \",\", \" \", suggestion.properties.state, \",\", \" \", suggestion.properties.country]\n            }, suggestion.properties.lat, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 23\n            }, this)) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Search, \"Vj2/GO1NOmBC+dvjGXGTarz2Kqk=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","useEffect","GeocoderAutocomplete","Search","props","location","setLocation","coord","setCoord","info","onCityChange","forecast","setForecast","submitted","setSubmitted","suggestions","setSuggestions","focus","setFocus","fetch","then","response","json","data","name","temp","main","weather","description","country","sys","icon","state","catch","error","console","log","list","features","handleInputChange","e","target","value","handleSelectClick","searchCoord","getAttribute","split","preventDefault","outlineColor","length","map","suggestion","properties","lat","lon","city"],"sources":["C:/Users/hengo/Documents/GitHub/react-weather/src/components/Search.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { GeocoderAutocomplete } from \"@geoapify/geocoder-autocomplete\";\r\n\r\nexport default function Search(props) {\r\n  const [location, setLocation] = useState(\"\");\r\n  const [coord, setCoord] = useState([]);\r\n  const { info, onCityChange, forecast, setForecast } = props;\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [suggestions, setSuggestions] = useState({});\r\n  const [focus, setFocus] = useState(false);\r\n\r\n  //fetch current weather data using coordinates from geomap\r\n  useEffect(() => {\r\n    if (submitted) {\r\n      fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?lat=${coord[0]}&lon=${coord[1]}&appid=4920da1d765991ca446bd506bd9286d3&units=imperial`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) =>\r\n          onCityChange({\r\n            name: data.name,\r\n            temp: data.main.temp,\r\n            weather: data.weather[0].main,\r\n            description: data.weather[0].description,\r\n            country: data.sys.country,\r\n            icon: `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`,\r\n            state: coord[2],\r\n          })\r\n        )\r\n        .catch((error) => console.log(error));\r\n    }\r\n  }, [coord]);\r\n\r\n  // fetch future forecast from API\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${coord[0]}&lon=${coord[1]}&cnt=5&appid=4920da1d765991ca446bd506bd9286d3&units=imperial`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => setForecast(data.list))\r\n      .catch((error) => console.log(error));\r\n  }, [coord]);\r\n\r\n  // autocomplete on input\r\n  useEffect(() => {\r\n    if (location) {\r\n      fetch(\r\n        `https://api.geoapify.com/v1/geocode/autocomplete?text=${location}&apiKey=82f3fe01d1294f6d9460337e0115e5d2`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => setSuggestions(data.features))\r\n        .catch((error) => console.log(error));\r\n    }\r\n  }, [location]);\r\n\r\n  function handleInputChange(e) {\r\n    setLocation(e.target.value);\r\n  }\r\n\r\n  //sets coordinates to option clicked from drop-down\r\n  function handleSelectClick(e) {\r\n    let searchCoord = e.target.getAttribute(\"data-value\").split(\",\");\r\n    console.log(searchCoord);\r\n    setCoord([searchCoord[0], searchCoord[1], searchCoord[2]]);\r\n    setSubmitted(true);\r\n    setFocus(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={(e) => e.preventDefault()}\r\n        className=\"mb-16 flex w-screen justify-center\"\r\n      >\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"pr-2\">\r\n            <label forHTML=\"location\" className={`flex h-full justify-center 2-`}>\r\n              Search location:{\" \"}\r\n            </label>\r\n          </div>\r\n          <div className=\"\">\r\n            <input\r\n              style={{ outlineColor: \"#C6E0FB\" }}\r\n              className=\" pl-[4px] rounded-lg w-1/3\"\r\n              placeholder=\"Enter city name\"\r\n              id=\"location\"\r\n              name=\"location\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              onChange={handleInputChange}\r\n              onFocus={() => setFocus(true)}\r\n              value={location}\r\n            />\r\n            <div className=\"\">\r\n              {suggestions.length > 0 && focus\r\n                ? suggestions.map((suggestion) =>\r\n                    location == \"\" ? null : (\r\n                      <div\r\n                        key={suggestion.properties.lat}\r\n                        className=\"hover:bg-sky-200 cursor-pointer\"\r\n                        onClick={handleSelectClick}\r\n                        data-value={[\r\n                          suggestion.properties.lat,\r\n                          suggestion.properties.lon,\r\n                          suggestion.properties.state,\r\n                        ]}\r\n                      >\r\n                        {suggestion.properties.city},{\" \"}\r\n                        {suggestion.properties.state},{\" \"}\r\n                        {suggestion.properties.country}\r\n                      </div>\r\n                    )\r\n                  )\r\n                : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}