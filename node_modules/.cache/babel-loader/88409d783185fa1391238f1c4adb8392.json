{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hengo\\\\Documents\\\\GitHub\\\\react-weather\\\\src\\\\components\\\\DisplayWeather.js\";\nimport moment from \"moment-timezone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DisplayWeather(props) {\n  const {\n    info,\n    forecast\n  } = props;\n  console.log(forecast);\n  const d = new Date();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"City: \", info.name, \", \", info.state, \", \", info.country, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: info.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Day and Time:\", moment(Date.now()).tz(\"America/New_York\").format(\"MM-DD-YY HH:mm\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Temperature: \", info.temp, \" \\xB0F \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Outside: \", info.weather]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Description: \", info.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: forecast ? forecast.map(time => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" h-[200px]\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: moment.unix(time.dt).tz(\"America/New_York\").format(\"MM-DD-YY HH:mm\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Temp:\", time.main.temp]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Weather: \", time.weather[0].main]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Description: \", time.weather[0].description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, this)\n        }, void 0, false)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = DisplayWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayWeather\");","map":{"version":3,"names":["moment","DisplayWeather","props","info","forecast","console","log","d","Date","name","state","country","icon","now","tz","format","temp","weather","description","map","time","unix","dt","main"],"sources":["C:/Users/hengo/Documents/GitHub/react-weather/src/components/DisplayWeather.js"],"sourcesContent":["import moment from \"moment-timezone\";\r\n\r\nexport default function DisplayWeather(props) {\r\n  const { info, forecast } = props;\r\n  console.log(forecast);\r\n  const d = new Date();\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>Weather</div>\r\n        <div>\r\n          City: {info.name}, {info.state}, {info.country}{\" \"}\r\n        </div>\r\n        <div>\r\n          <img src={info.icon} />\r\n        </div>\r\n        <div>\r\n          Day and Time:\r\n          {moment(Date.now()).tz(\"America/New_York\").format(\"MM-DD-YY HH:mm\")}\r\n          {/* {moment\r\n            .unix(d.getTime())\r\n            .tz(\"America/New_York\")\r\n            .format(\"YYYY-MM-DD HH:mm\")} */}\r\n        </div>\r\n        <div>Temperature: {info.temp} Â°F </div>\r\n        <div>Outside: {info.weather}</div>\r\n        <div>Description: {info.description}</div>\r\n      </div>\r\n\r\n      <div>\r\n        <div>Forecast</div>\r\n        <div>\r\n          {forecast\r\n            ? forecast.map((time) => (\r\n                <>\r\n                  <div className=\" h-[200px]\">\r\n                    <div>\r\n                      {moment\r\n                        .unix(time.dt)\r\n                        .tz(\"America/New_York\")\r\n                        .format(\"MM-DD-YY HH:mm\")}\r\n                    </div>\r\n                    <div>Temp:{time.main.temp}</div>\r\n                    <div>Weather: {time.weather[0].main}</div>\r\n                    <div>Description: {time.weather[0].description}</div>{\" \"}\r\n                  </div>\r\n                </>\r\n              ))\r\n            : null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,iBAAnB;;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAC5C,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAqBF,KAA3B;EACAG,OAAO,CAACC,GAAR,CAAYF,QAAZ;EACA,MAAMG,CAAC,GAAG,IAAIC,IAAJ,EAAV;EACA,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,qBACSL,IAAI,CAACM,IADd,QACsBN,IAAI,CAACO,KAD3B,QACoCP,IAAI,CAACQ,OADzC,EACkD,GADlD;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAKE;QAAA,uBACE;UAAK,GAAG,EAAER,IAAI,CAACS;QAAf;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QALF,eAQE;QAAA,4BAEGZ,MAAM,CAACQ,IAAI,CAACK,GAAL,EAAD,CAAN,CAAmBC,EAAnB,CAAsB,kBAAtB,EAA0CC,MAA1C,CAAiD,gBAAjD,CAFH;MAAA;QAAA;QAAA;QAAA;MAAA,QARF,eAgBE;QAAA,4BAAmBZ,IAAI,CAACa,IAAxB;MAAA;QAAA;QAAA;QAAA;MAAA,QAhBF,eAiBE;QAAA,wBAAeb,IAAI,CAACc,OAApB;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBF,eAkBE;QAAA,4BAAmBd,IAAI,CAACe,WAAxB;MAAA;QAAA;QAAA;QAAA;MAAA,QAlBF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAsBE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UACGd,QAAQ,GACLA,QAAQ,CAACe,GAAT,CAAcC,IAAD,iBACX;UAAA,uBACE;YAAK,SAAS,EAAC,YAAf;YAAA,wBACE;cAAA,UACGpB,MAAM,CACJqB,IADF,CACOD,IAAI,CAACE,EADZ,EAEER,EAFF,CAEK,kBAFL,EAGEC,MAHF,CAGS,gBAHT;YADH;cAAA;cAAA;cAAA;YAAA,QADF,eAOE;cAAA,oBAAWK,IAAI,CAACG,IAAL,CAAUP,IAArB;YAAA;cAAA;cAAA;cAAA;YAAA,QAPF,eAQE;cAAA,wBAAeI,IAAI,CAACH,OAAL,CAAa,CAAb,EAAgBM,IAA/B;YAAA;cAAA;cAAA;cAAA;YAAA,QARF,eASE;cAAA,4BAAmBH,IAAI,CAACH,OAAL,CAAa,CAAb,EAAgBC,WAAnC;YAAA;cAAA;cAAA;cAAA;YAAA,QATF,EASwD,GATxD;UAAA;YAAA;YAAA;YAAA;UAAA;QADF,iBADF,CADK,GAgBL;MAjBN;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAtBF;EAAA,gBADF;AA+CD;KAnDuBjB,c"},"metadata":{},"sourceType":"module"}