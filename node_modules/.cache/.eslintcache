[{"C:\\Users\\hengo\\Documents\\GitHub\\react-weather\\src\\index.js":"1","C:\\Users\\hengo\\Documents\\GitHub\\react-weather\\src\\App.js":"2","C:\\Users\\hengo\\Documents\\GitHub\\react-weather\\src\\components\\Search.js":"3","C:\\Users\\hengo\\Documents\\GitHub\\react-weather\\src\\components\\DisplayWeather.js":"4"},{"size":265,"mtime":1664160896730,"results":"5","hashOfConfig":"6"},{"size":686,"mtime":1664244521583,"results":"7","hashOfConfig":"6"},{"size":3694,"mtime":1664253809060,"results":"8","hashOfConfig":"6"},{"size":2056,"mtime":1664240369419,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1h1ee7s",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"13"},"C:\\Users\\hengo\\Documents\\GitHub\\react-weather\\src\\index.js",[],[],[],"C:\\Users\\hengo\\Documents\\GitHub\\react-weather\\src\\App.js",[],[],"C:\\Users\\hengo\\Documents\\GitHub\\react-weather\\src\\components\\Search.js",["24","25","26","27","28","29","30"],[],"C:\\Users\\hengo\\Documents\\GitHub\\react-weather\\src\\components\\DisplayWeather.js",["31","32","33"],[],"import moment from \"moment-timezone\";\r\n\r\nexport default function DisplayWeather(props) {\r\n  const { info, forecast } = props;\r\n  console.log(forecast);\r\n  const d = new Date();\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col w-screen justify-center items-center mb-14\">\r\n        <div>Current Weather</div>\r\n        <div>\r\n          City: {info.name}, {info.state}, {info.country}{\" \"}\r\n        </div>\r\n        <div>\r\n          <img src={info.icon} />\r\n        </div>\r\n        <div>\r\n          Day and Time:\r\n          {` ${moment(Date.now())\r\n            .tz(\"America/New_York\")\r\n            .format(\"MM-DD-YY HH:mm\")}`}{\" \"}\r\n          EST\r\n        </div>\r\n        <div>Temperature: {info.temp} °F </div>\r\n        <div>Outside: {info.weather}</div>\r\n        <div>Description: {info.description}</div>\r\n      </div>\r\n\r\n      <div>\r\n        <div className=\"text-center text-2xl mt-4 m-auto w-screen\">\r\n          Forecast for next 15 hours\r\n        </div>\r\n        <div className=\"mt-4 bg-red flex w-screen flex-wrap justify-evenly items-center\">\r\n          {forecast\r\n            ? forecast.map((time) => (\r\n                <>\r\n                  <div className=\"flex flex-col justify-center items-center rounded-lg shadow-lg h-[340px] w-[240px]\">\r\n                    <div>\r\n                      <img\r\n                        src={`http://openweathermap.org/img/wn/${time.weather[0].icon}.png`}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      {moment\r\n                        .unix(time.dt)\r\n                        .tz(\"America/New_York\")\r\n                        .format(\"MM-DD-YY HH:mm\")}{\" \"}\r\n                      EST\r\n                    </div>\r\n                    <div>Temp: {time.main.temp} °F</div>\r\n                    <div>Outside: {time.weather[0].main}</div>\r\n                    <div>Description: {time.weather[0].description}</div>{\" \"}\r\n                  </div>\r\n                </>\r\n              ))\r\n            : null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"34","severity":1,"message":"35","line":2,"column":10,"nodeType":"36","messageId":"37","endLine":2,"endColumn":30},{"ruleId":"34","severity":1,"message":"38","line":7,"column":11,"nodeType":"36","messageId":"37","endLine":7,"endColumn":15},{"ruleId":"34","severity":1,"message":"39","line":7,"column":31,"nodeType":"36","messageId":"37","endLine":7,"endColumn":39},{"ruleId":"40","severity":1,"message":"41","line":31,"column":6,"nodeType":"42","endLine":31,"endColumn":13,"suggestions":"43"},{"ruleId":"40","severity":1,"message":"44","line":40,"column":6,"nodeType":"42","endLine":40,"endColumn":13,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":68,"column":3,"nodeType":"48","messageId":"49","endLine":70,"endColumn":4},{"ruleId":"50","severity":1,"message":"51","line":97,"column":28,"nodeType":"52","messageId":"53","endLine":97,"endColumn":30},{"ruleId":"34","severity":1,"message":"54","line":6,"column":9,"nodeType":"36","messageId":"37","endLine":6,"endColumn":10},{"ruleId":"55","severity":1,"message":"56","line":15,"column":11,"nodeType":"57","endLine":15,"endColumn":34},{"ruleId":"55","severity":1,"message":"56","line":39,"column":23,"nodeType":"57","endLine":41,"endColumn":25},"no-unused-vars","'GeocoderAutocomplete' is defined but never used.","Identifier","unusedVar","'info' is assigned a value but never used.","'forecast' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onCityChange' and 'submitted'. Either include them or remove the dependency array.","ArrayExpression",["58"],"React Hook useEffect has a missing dependency: 'setForecast'. Either include it or remove the dependency array.",["59"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'d' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},"Update the dependencies array to be: [coord, onCityChange, submitted]",{"range":"64","text":"65"},"Update the dependencies array to be: [coord, setForecast]",{"range":"66","text":"67"},[1188,1195],"[coord, onCityChange, submitted]",[1533,1540],"[coord, setForecast]"]